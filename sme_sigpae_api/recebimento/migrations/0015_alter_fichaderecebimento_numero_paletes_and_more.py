# Generated by Django 5.2.2 on 2025-09-23 12:03

from django.db import migrations, models


def converte_para_inteiro(valor):
    if not valor:
        return None
    return int(valor.replace(".", ""))


def converte_para_float(valor):
    if not valor:
        return None

    valor_limpo = str(valor).replace(".", "").replace(",", ".")
    return float(valor_limpo)


def converte_de_char_para_numerico(apps, schema_editor):
    Model = apps.get_model("recebimento", "FichaDeRecebimento")
    for obj in Model.objects.all():
        # Campos que foram de CharField para FloatField
        campos_decimal = [
            "peso_embalagem_primaria_1",
            "peso_embalagem_primaria_2",
            "peso_embalagem_primaria_3",
            "peso_embalagem_primaria_4",
        ]
        for field in campos_decimal:
            valor_original = getattr(obj, field)
            valor_convertido = converte_para_float(valor_original)
            setattr(obj, field, valor_convertido)

        # Campos que foram de CharField para IntegerField
        valor_paletes = getattr(obj, "numero_paletes")
        valor_convertido = converte_para_inteiro(valor_paletes)
        setattr(obj, "numero_paletes", valor_convertido)

        obj.save()


def converte_para_char(apps, schema_editor):
    Model = apps.get_model("recebimento", "FichaDeRecebimento")
    for obj in Model.objects.all():
        # Converte FloatField para CharField
        campos_decimal = [
            "peso_embalagem_primaria_1",
            "peso_embalagem_primaria_2",
            "peso_embalagem_primaria_3",
            "peso_embalagem_primaria_4",
        ]

        for field in campos_decimal:
            valor = getattr(obj, field)
            valor_convertido = str(valor).replace(".", ",")
            setattr(obj, field, valor_convertido if valor else None)

        # Converte IntegerField para CharField
        valor_paletes = getattr(obj, "numero_paletes")
        setattr(obj, "numero_paletes", str(valor_paletes) if valor_paletes else None)

        obj.save()


class Migration(migrations.Migration):

    dependencies = [
        ("recebimento", "0014_fichaderecebimento_houve_ocorrencia"),
    ]

    operations = [
        migrations.RunPython(
            converte_de_char_para_numerico, reverse_code=converte_para_char
        ),
        migrations.AlterField(
            model_name="fichaderecebimento",
            name="numero_paletes",
            field=models.IntegerField(
                blank=True, null=True, verbose_name="Nº de Paletes"
            ),
        ),
        migrations.AlterField(
            model_name="fichaderecebimento",
            name="peso_embalagem_primaria_1",
            field=models.FloatField(
                blank=True, null=True, verbose_name="Peso da Embalagem Primária (1)"
            ),
        ),
        migrations.AlterField(
            model_name="fichaderecebimento",
            name="peso_embalagem_primaria_2",
            field=models.FloatField(
                blank=True, null=True, verbose_name="Peso da Embalagem Primária (2)"
            ),
        ),
        migrations.AlterField(
            model_name="fichaderecebimento",
            name="peso_embalagem_primaria_3",
            field=models.FloatField(
                blank=True, null=True, verbose_name="Peso da Embalagem Primária (3)"
            ),
        ),
        migrations.AlterField(
            model_name="fichaderecebimento",
            name="peso_embalagem_primaria_4",
            field=models.FloatField(
                blank=True, null=True, verbose_name="Peso da Embalagem Primária (4)"
            ),
        ),
    ]
