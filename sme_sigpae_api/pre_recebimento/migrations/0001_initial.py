# Generated by Django 3.2.16 on 2023-02-13 15:17

import uuid

import django.core.validators
import django.db.models.deletion
import django_xworkflows.models
import multiselectfield.db.fields
from django.conf import settings
from django.db import migrations, models

import sme_sigpae_api.dados_comuns.behaviors


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("terceirizada", "0013_auto_20230112_1152"),
        ("produto", "0075_auto_20230201_2037"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("dados_comuns", "0076_auto_20230213_1517"),
    ]

    operations = [
        migrations.CreateModel(
            name="AlteracaoCronogramaEtapa",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nova_data_programada",
                    models.DateField(
                        blank=True, null=True, verbose_name="Nova Data Programada"
                    ),
                ),
                ("nova_quantidade", models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Cronograma",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "alterado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Alterado em"),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "status",
                    django_xworkflows.models.StateField(
                        max_length=21,
                        workflow=django_xworkflows.models._SerializedWorkflow(
                            initial_state="RASCUNHO",
                            name="CronogramaWorkflow",
                            states=[
                                "RASCUNHO",
                                "ENVIADO_AO_FORNECEDOR",
                                "ALTERACAO_CODAE",
                                "APROVADO",
                                "REPROVADO",
                                "ALTERACAO_FORNECEDOR",
                                "VALIDADO_FORNECEDOR",
                                "SOLICITADO_ALTERACAO",
                                "ASSINADO_CRONOGRAMA",
                            ],
                        ),
                    ),
                ),
                (
                    "numero",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        unique=True,
                        verbose_name="Número do Cronograma",
                    ),
                ),
                (
                    "qtd_total_programada",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Qtd Total Programada"
                    ),
                ),
                (
                    "tipo_embalagem",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CAIXA", "Caixa"),
                            ("FARDO", "Fardo"),
                            ("TUBET", "Tubet"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "armazem",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cronogramas",
                        to="terceirizada.terceirizada",
                    ),
                ),
                (
                    "contrato",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="terceirizada.contrato",
                    ),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="terceirizada.terceirizada",
                    ),
                ),
                (
                    "produto",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="produto.nomedeprodutoedital",
                    ),
                ),
                (
                    "unidade_medida",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="produto.unidademedida",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cronograma",
                "verbose_name_plural": "Cronogramas",
            },
            bases=(
                sme_sigpae_api.dados_comuns.behaviors.TemIdentificadorExternoAmigavel,
                sme_sigpae_api.dados_comuns.behaviors.Logs,
                django_xworkflows.models.BaseWorkflowEnabled,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="EmbalagemQld",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "alterado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Alterado em"),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "nome",
                    models.CharField(max_length=150, unique=True, verbose_name="Nome"),
                ),
                (
                    "abreviacao",
                    models.CharField(max_length=15, verbose_name="Abreviação"),
                ),
            ],
            options={
                "verbose_name": "Embalagem QLD",
                "verbose_name_plural": "Embalagens QLD",
            },
        ),
        migrations.CreateModel(
            name="SolicitacaoAlteracaoCronograma",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "alterado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Alterado em"),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "status",
                    django_xworkflows.models.StateField(
                        max_length=16,
                        workflow=django_xworkflows.models._SerializedWorkflow(
                            initial_state="EM_ANALISE",
                            name="CronogramaAlteracaoWorkflow",
                            states=["EM_ANALISE", "ACEITA", "NEGADA"],
                        ),
                    ),
                ),
                (
                    "motivo",
                    multiselectfield.db.fields.MultiSelectField(
                        choices=[
                            ("ALTERAR_DATA_ENTREGA", "Alterar data de entrega"),
                            ("ALTERAR_QTD_ALIMENTO", "Alterar quantidade de alimento"),
                            ("OUTROS", "Outros"),
                        ],
                        max_length=48,
                    ),
                ),
                (
                    "justificativa",
                    models.TextField(
                        blank=True,
                        verbose_name="Justificativa de solicitação pelo fornecedor",
                    ),
                ),
                (
                    "numero_solicitacao",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        unique=True,
                        verbose_name="Número da solicitação",
                    ),
                ),
                (
                    "cronograma",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="solicitacoes_de_alteracao",
                        to="pre_recebimento.cronograma",
                    ),
                ),
                (
                    "etapas",
                    models.ManyToManyField(
                        to="pre_recebimento.AlteracaoCronogramaEtapa"
                    ),
                ),
                (
                    "usuario_solicitante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Solicitação de Alteração de Cronograma",
                "verbose_name_plural": "Solicitações de Alteração de Cronograma",
            },
            bases=(
                sme_sigpae_api.dados_comuns.behaviors.TemIdentificadorExternoAmigavel,
                django_xworkflows.models.BaseWorkflowEnabled,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="ProgramacaoDoRecebimentoDoCronograma",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "alterado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Alterado em"),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("data_programada", models.CharField(blank=True, max_length=50)),
                (
                    "tipo_carga",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PALETIZADA", "Paletizada"),
                            ("ESTIVADA_BATIDA", "Estivada / Batida"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "cronograma",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="programacoes_de_recebimento",
                        to="pre_recebimento.cronograma",
                    ),
                ),
            ],
            options={
                "verbose_name": "Programação do Recebimento do Cromograma",
                "verbose_name_plural": "Programações dos Recebimentos dos Cromogramas",
            },
        ),
        migrations.CreateModel(
            name="Laboratorio",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "alterado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Alterado em"),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "nome",
                    models.CharField(max_length=150, unique=True, verbose_name="Nome"),
                ),
                (
                    "cnpj",
                    models.CharField(
                        blank=True,
                        max_length=14,
                        validators=[django.core.validators.MinLengthValidator(14)],
                        verbose_name="CNPJ",
                    ),
                ),
                ("cep", models.CharField(blank=True, max_length=8, verbose_name="CEP")),
                (
                    "logradouro",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Logradouro"
                    ),
                ),
                (
                    "numero",
                    models.CharField(blank=True, max_length=10, verbose_name="Número"),
                ),
                (
                    "complemento",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Complemento"
                    ),
                ),
                (
                    "bairro",
                    models.CharField(blank=True, max_length=150, verbose_name="Bairro"),
                ),
                (
                    "cidade",
                    models.CharField(blank=True, max_length=150, verbose_name="Cidade"),
                ),
                (
                    "estado",
                    models.CharField(blank=True, max_length=150, verbose_name="Estado"),
                ),
                (
                    "credenciado",
                    models.BooleanField(
                        default=False, verbose_name="Está credenciado?"
                    ),
                ),
                (
                    "contatos",
                    models.ManyToManyField(blank=True, to="dados_comuns.Contato"),
                ),
            ],
            options={
                "verbose_name": "Laboratório",
                "verbose_name_plural": "Laboratórios",
            },
        ),
        migrations.CreateModel(
            name="EtapasDoCronograma",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "alterado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Alterado em"),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "numero_empenho",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Número do Empenho"
                    ),
                ),
                ("etapa", models.CharField(blank=True, max_length=15)),
                ("parte", models.CharField(blank=True, max_length=15)),
                (
                    "data_programada",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data Programada"
                    ),
                ),
                ("quantidade", models.FloatField(blank=True, null=True)),
                (
                    "total_embalagens",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Total de Embalagens"
                    ),
                ),
                (
                    "cronograma",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="etapas",
                        to="pre_recebimento.cronograma",
                    ),
                ),
            ],
            options={
                "verbose_name": "Etapa do Cronograma",
                "verbose_name_plural": "Etapas dos Cronogramas",
                "ordering": ("etapa", "data_programada"),
            },
        ),
        migrations.AddField(
            model_name="alteracaocronogramaetapa",
            name="etapa",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="pre_recebimento.etapasdocronograma",
            ),
        ),
    ]
