name: Docker Image CI - Development
 
on:

  push:
    branches: [ development ]
    paths-ignore:
    - ".github/workflows/**"  
  
  workflow_dispatch:

jobs:

  sonar:
  
    runs-on: self-hosted
    if: ${{ github.ref == 'refs/heads/development' }}
    steps:
      - uses: actions/checkout@v2
          
      - name: Sonar
        uses: luizhpriotto/action_images@sonarscannercli-v1.0
        env:
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST: http://sonar.sme.prefeitura.sp.gov.br/
          
      - name: send default message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}            
            Repository: ${{ github.repository }}            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            ${GITHUB_SERVER_URL}/ ${$GITHUB_REPOSITORY}/actions/runs/ ${$GITHUB_RUN_ID}
    
  test:
  
    runs-on: self-hosted
    if: ${{ github.ref == 'refs/heads/development' }}
    needs: [ sonar ]
    steps:
      - name: Delete Container..
        run: if [ ! -z $(docker ps -q --filter "name=terceirizadas-db") ]; then docker rm -f terceirizadas-db; fi
      
      - name: Preparing Container...
        run: |
          docker run -d --rm --cap-add SYS_TIME --name terceirizadas-db -p 5432 --network python-network -e TZ="America/Sao_Paulo" -e POSTGRES_DB=terceirizadas -e POSTGRES_PASSWORD=adminadmin -e POSTGRES_USER=postgres postgres:11-alpine
          cp /srv/env/terceirizadas .
          
      - name: Running Python Tests
        uses: luizhpriotto/action_images@python36-v1.0
        with:
          command: |
            docker network connect python-network $(hostname)
            pip install --user pipenv
            source terceirizadas
            pipenv install --dev
            pipenv run pytest
            pipenv run flake8
            
      - name: send default message
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
         
  build:

    runs-on: self-hosted
    if: ${{ github.ref == 'refs/heads/development' }}
    needs: [ test ]
    steps:
      - uses: actions/checkout@v2     
      -  name: Login to registry
         uses: docker/login-action@v1
         with:
          registry: ${{ secrets.REGISTRY_HOST }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PWD }}
    
      - name: Build the Docker image    
        run: | 
             docker build . --tag ${{ secrets.REGISTRY_HOST }}/${GITHUB_REF##*/}/sme-sigpae-api
             docker push ${{ secrets.REGISTRY_HOST }}/${GITHUB_REF##*/}/sme-sigpae-api
             
  deploy:
  
    runs-on: self-hosted
    needs: [ build ]
    if: ${{ github.ref == 'refs/heads/development' }}        
    environment:
      name: development
    steps:
      - name: Redeploy
        uses: luizhpriotto/action_images@kubectl-v1.0
        env: 
          RANCHER_URL: ${{ secrets.RANCHER_URL }}
          RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
          NAMESPACE: sme-sigpae
