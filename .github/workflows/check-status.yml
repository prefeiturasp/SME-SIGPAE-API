name: Check Status

on:

  push:
    branches:
      - 'bug**'
      - 'bugfix**'
      - 'feature**'
      - 'fix**'
      - 'releases**'
      - 'hotfix**'

    paths-ignore:
    - ".github/workflows/**"

  workflow_dispatch:

jobs:

  sonar:

    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2

      - name: Sonar
        uses: luizhpriotto/action_images@sonarscannercli-v1.0
        env:
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST: http://sonar.sme.prefeitura.sp.gov.br/

  test:

    runs-on: self-hosted
    needs: [ sonar ]
    steps:
      - name: Delete Container..
        run: if [ ! -z $(docker ps -q --filter "name=terceirizadas-db") ]; then docker rm -f terceirizadas-db; fi

      - name: Preparing Container...
        #Criação do container de banco de dados e copia das variaveis que serão carregadas.
        run: |
          docker run -d --rm --cap-add SYS_TIME --name terceirizadas-db -p 5432 --network python-network -e TZ="America/Sao_Paulo" -e POSTGRES_DB=terceirizadas -e POSTGRES_PASSWORD=adminadmin -e POSTGRES_USER=postgres postgres:11-alpine
          cp /srv/env/terceirizadas .

      - name: Ajustando HOME para o cache
        run: |
           cd $RUNNER_WORKSPACE
           cd ..
           pwd
           echo "GITHUB_RUN_HOME=$(pwd)" >> $GITHUB_ENV
      - name: Show envs..
        run: echo $GITHUB_RUN_HOME

      - name: Cache Pipenv virtualenv
        uses: actions/cache@v3
        id: pipenv-cache
        with:
          path: ${{ env.GITHUB_RUN_HOME }}/_temp/_github_home/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-
      - name: Running Python Tests
        if: steps.pipenv-cache.outputs.cache-hit != 'true'
        uses: prefeiturasp/SME-GithubAction-Images@python38-v1.0
        with:
          command: |
            docker network connect python-network $(hostname)
            pip install --user pipenv pipenv==2022.4.8
            source terceirizadas
            pipenv install --dev
            echo "################ FLAKE8 ################"
            pipenv run flake8
            echo "################ PYTEST ################"
            pipenv run pytest

      - name: Running Python Tests with cache
        if: steps.pipenv-cache.outputs.cache-hit == 'true'
        uses: prefeiturasp/SME-GithubAction-Images@python38-v1.0
        with:
          command: |
            docker network connect python-network $(hostname)
            pip install --user pipenv pipenv==2022.4.8
            source terceirizadas
            echo "################ FLAKE8 ################"
            pipenv run flake8
            echo "################ PYTEST ################"
            pipenv run pytest
